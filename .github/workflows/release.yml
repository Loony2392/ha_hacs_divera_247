name: ✅ Release

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name'
        required: true
      release_title:
        description: 'Release title'
        required: true
      release_body:
        description: 'Release body'
        required: false

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  dependency_update:
    name: "🔄 Update Dependencies"
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: 📦 Install pip-tools
        run: pip install pip-tools

      - name: 📄 Ensure requirements.in exists
        run: |
          if [ ! -f requirements.in ]; then
            echo "Generating requirements.in from requirements.txt..."
            cp requirements.txt requirements.in
          fi

      - name: 🔄 Update Dependencies
        run: pip-compile --upgrade requirements.in

      - name: 🔄 Sync Dependencies
        run: pip-sync

      - name: 🚀 Commit and Push Changes
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add requirements.txt
          git diff --cached --quiet || git commit -m "🔄 Auto-update dependencies"
          git push origin HEAD:main

  lint:
    name: "🔍 Linting & Static Analysis"
    runs-on: ubuntu-latest
    needs: dependency_update
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: 🔍 Install Linting Tools
        run: pip install flake8

      - name: 🛠️ Run Linting
        run: flake8 .

  release:
    name: "🚀 Create Release"
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: 🏗️ Build Distribution Packages
        run: python setup.py sdist bdist_wheel
        working-directory: .

      - name: 📦 Install Towncrier
        run: pip install towncrier

      - name: 📜 Generate Changelog
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/custom_components/divera247
          towncrier build --yes

      - name: 📦 Prepare Release Assets
        run: ./scripts/prep_release.sh ${{ github.ref_name }}

      - name: 🚀 Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: 📦 Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: divera247.zip
          asset_name: divera247.zip
          asset_content_type: application/zip
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

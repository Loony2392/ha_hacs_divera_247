name: CI Pipeline for Home Assistant Custom Component

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]

jobs:
  lint:
    name: üîç Linting & Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install Linting Tools
        run: pip install flake8
      - name: Run Linting
        run: flake8 .

  tests:
    name: ‚úÖ Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install Dependencies and Test Tools
        run: |
          pip install -r requirements.txt
          pip install pytest
      - name: Run Tests
        run: pytest

  coverage:
    name: üìä Code Coverage
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install Dependencies and Coverage Tools
        run: |
          pip install -r requirements.txt
          pip install pytest coverage
      - name: Run Coverage
        run: |
          coverage run -m pytest
          coverage report -m

  docs:
    name: üìö Generate Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install Towncrier and Documentation Tools
        run: |
          pip install towncrier sphinx sphinx_rtd_theme
      - name: Generate Changelog
        run: towncrier --yes
      - name: Build Documentation
        run: make -C docs html

  release:
    name: üöÄ Create Release
    runs-on: ubuntu-latest
    needs: coverage
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build Distribution Packages
        run: python setup.py sdist bdist_wheel
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
